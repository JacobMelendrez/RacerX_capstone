let uuidv4,dbPromise;_8d3‍.x([["grantAuthToken",()=>grantAuthToken],["lookUpUserFromAuthToken",()=>lookUpUserFromAuthToken]]);_8d3‍.w("uuid",[["v4",["uuidv4"],function(v){uuidv4=v}]]);_8d3‍.w("./index",[["dbPromise",["dbPromise"],function(v){dbPromise=v}]]);//generate an auth token and store it in the DB and set it as a cookie



       const grantAuthToken = async (userId) =>{
    const db = await _8d3‍.a("dbPromise",dbPromise);
    const tokenString = _8d3‍.a("uuidv4",uuidv4)();
    await db.run('INSERT INTO Authtokens (token, userId) VALUES (?,?);',
        tokenString, userId);
    return tokenString;
};_8d3‍.j(["grantAuthToken"]);

       const lookUpUserFromAuthToken = async (authToken)=>{
    const db = await _8d3‍.a("dbPromise",dbPromise);
    const token = await db.get('SELECT * FROM AuthTokens WHERE token=?;', authToken);
    if(!token){
        return null;
    }
    const user = await db.get('SELECT id, email, username FROM Users WHERE id=?;', token.userId);
    return user;
};_8d3‍.j(["lookUpUserFromAuthToken"]);